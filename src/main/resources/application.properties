
jdbc_url=${DB_JDBC:jdbc:postgresql://172.17.0.1:5432/auth}
user_db=${DB_USER:postgres}
pass_db=${DB_PASSWORD:admin}

host_rabbit=${RABBIT_HOST:172.17.0.1}
user_rabbit=${RABBIT_USER:api}
pass_rabbit=${RABBIT_PASSWORD:api@user}


spring.profiles.active=${PROFILE:dev}
spring.application.name=authserver
server.port=${PORT:8080}

springdoc.api-docs.path=/docs
springdoc.swagger-ui.use-root-path=false
springdoc.swagger-ui.path=/docs/swagger-ui.html

spring.cloud.config.enabled=true
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
management.endpoints.web.base-path=/_app-state
management.endpoint.health.show-details=always
management.endpoint.health.probes.add-additional-paths=true
management.endpoint.health.probes.enabled=true

management.endpoints.web.exposure.include=*
spring.cloud.kubernetes.enabled=false

identity-privider.address=${KEYCLOAK_ADDRESS:keycloak-local.com:9776}
identity-privider.helm=${KEYCLOAK_HELM:eselwer}

keycloak.url=http://${identity-privider.address}
keycloak.realm.url=${keycloak.url}/realms/${identity-privider.helm}
keycloak.aplication.token.url=/protocol/openid-connect/token
keycloak.aplication.session.url=/protocol/openid-connect/userinfo


keycloak.admin.realm.url=${keycloak.url}/admin/realms/${identity-privider.helm}
keycloak.admin.user.url=/users
keycloak.admin.user.by-id.url=/users/{id}

keycloak.admin.user.verify-email.url=/users/{id}/send-verify-email
keycloak.admin.user.execute-actions.url=/users/{id}/execute-actions-email
keycloak.admin.user.logout.url=/users/{id}/logout


keycloak.admin.profile.client-id=${PROFILE_ADM_CLI_ID:admin-rest-client}
keycloak.admin.profile.secret=${PROFILE_ADM_SECRET:I6xAA54Lskj2qYFOeIYQuHJ6daC2Yhh3}
keycloak.admin.profile.username=${PROFILE_ADM_USER:admin-api}
keycloak.admin.profile.password=${PROFILE_ADM_PWD:api-access}




logging.level.root=${LOG_LEVEL:INFO}

spring.flyway.enabled=true
spring.flyway.url=${jdbc_url}
spring.flyway.schemas=public
spring.flyway.user=${user_db}
spring.flyway.password=${pass_db}
spring.flyway.locations=classpath:db/migration



spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=true
spring.datasource.timeBetweenEvictionRunsMillis=3600000
spring.datasource.validationQuery=SELECT 1
spring.datasource.url=${jdbc_url}
spring.datasource.username=${user_db}
spring.datasource.password=${pass_db}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.hibernate.ddl-auto=none
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect


spring.rabbitmq.host=${host_rabbit}
spring.rabbitmq.port=5672
spring.rabbitmq.username=${user_rabbit}
spring.rabbitmq.password=${pass_rabbit}
spring.rabbitmq.dynamic=true
spring.rabbitmq.listener.simple.prefetch=100



camel.springboot.auto-startup=true
camel.springboot.consumer-template-cache-size=10
camel.springboot.producer-template-cache-size=10
camel.springboot.main-run-controller=true
camel.springboot.name=AccountCamel
camel.springboot.component.spring-rabbitmq.auto-declare=true

good-pratices-auth.user.created=&deadLetterExchange=account&deadLetterExchangeType=topic\
  &deadLetterQueue=auth.user.created-dlq&deadLetterRoutingKey=event.user.created-dlq\
  &maximumRetryAttempts=3&retryDelay=2000&concurrentConsumers=3&maxConcurrentConsumers=3&prefetchCount=100

good-pratices-auth.user.keycloak.events=&deadLetterExchange=auth&deadLetterExchangeType=topic\
  &deadLetterQueue=auth.user.keycloak.events-dlq&deadLetterRoutingKey=event.user.keycloak.events-dlq\
  &maximumRetryAttempts=3&retryDelay=2000&concurrentConsumers=3&maxConcurrentConsumers=3&prefetchCount=100


events.origin.rabbit-mq.user-created=spring-rabbitmq:account?queues=auth.user.created&routingKey=event.user.created\
  &exchangeType=topic&autoDeclare=true${good-pratices-auth.user.created}

command.origin.user-auth-send-email=direct:userAuthSendEmail
command.origin.user-access-confirmed=direct:userAccessConfirmed

events.origin.rabbit-mq.user.keycloak.events=spring-rabbitmq:keycloak?queues=auth.user.keycloak.events&routingKey=event.user.keycloak.events\
  &exchangeType=topic&autoDeclare=true${good-pratices-auth.user.keycloak.events}
command.destiny.rabbit-mq.user-auth-send-email=spring-rabbitmq:communication?routingKey=command.send-email.user-auth&exchangeType=topic&autoDeclare=true
command.destiny.rabbit-mq.user-access-confirmed=spring-rabbitmq:auth?routingKey=event.user-access-confirmed&exchangeType=topic&autoDeclare=true

